---
layout: post
title:  "Why software development?"
date:   2017-08-06 17:58:23 +0000
---

 ![](http://imgur.com/JVuqUaL)

     I arrived at the decision to learn the skill of software coding through a long and gradual process.  About 5 years ago, I was first intrigued by popular depicitions of hacking in movies like *The Girl with the Dragon Tattoo*.  I also really enjoyed the tv series *Person of Interest*.  I was especially intrigued by the character of Finch in that series.  He was the inventor of an AI and was so masterful with little more than a keyboard at his disposal.  The way that the characters in these ficitonal stories were able to access an intangible world totally unkown to the uninitiated, made me want to become a member of such an ilk - those with sophisticated knowledge of technology.  More recently, the quietly understated and subversive righteousness of Elliott in *Mr. Robot* caught my attention.  I guess, in a way, becoming like Elliot, Finch, or Lisbeth (from *The Girl with the Dragon Tattoo*) was percolating away in my subconscious and inspired me to dabble in coding exercises on codeacademy.com.  This was my first step toward actually fashioning myself into a nascent software developer.   
		 To see the words "software developer" associated with my name in print makes me feel somewhat like a fraud, but I'm reassured by the fact that I have taken real and demonstrable steps forward.  I have begun.  And well...now I have to finish.  I recognize that continuing through a learning process is essentially uncomfortable and at times, quite painful.  So the question that I had to ask myself before I committed to the Flatiron School (with its tuition as a measure of such commitment) was, "Do you have the will to suffer in order to finish?"  
		 As a high school teacher of a little over a decade, I have observed that suffering is an essential part of learning any new thing. When I say suffering, I don't mean physical of course, but mental; mainly the suffering that comes from learning to tolerate frustration.  Learning to tolerate wrong solutions to problems despite having given your best effort and then to muster another best effort and try again is an essential skill.  Successful learning is inextricably linked with the will to suffer and to force the process of behavioral change upon oneself.  In my experience, those students who put forth such an effort to grit through a difficult process are the most successful.  In fact, they are the only ones who are successful at learning the new skill. 
		 So why does a high school Spanish teacher decide to make a radical move to learn how to write and develop software applications?  How is being a teacher an element in such a decision?  For one thing, I may want to teach the new skills that I am currently learning one day.  The economy of the future will continue to be based upon intangible knowledge and data-based products.  Those who know how to work best with intelligent machines will be the most prosperous workers in the economy of the coming decades.  If I can participate in this process by passing useful knowledge forward, then I'll be helping to give students useful and employable skills.  
		 And lastly, being able to pull up a code screen in an IDE looks cool when you're in a coffee shop; way cooler than working on your social media page, anyway.  
